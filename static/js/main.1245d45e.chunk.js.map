{"version":3,"sources":["Section/Form/index.js","Section/Products/index.js","Section/Buttons/index.js","Section/index.js","Header/index.js","Container/index.js","App.js","reportWebVitals.js","index.js"],"names":["Form","addNewProduct","useState","newProductContent","setNewProductContent","isEditing","setEditing","inputRef","useRef","useEffect","current","focus","className","onSubmit","event","preventDefault","trim","type","name","placeholder","value","onChange","target","ref","onClick","Products","products","hideDone","removeProduct","toggleDoneProduct","map","product","done","id","content","Buttons","toggleHideDone","setAllDone","length","some","disabled","every","Section","title","body","extraHeaderContent","Header","Container","children","App","JSON","parse","localStorage","getItem","setProducts","setItem","stringify","setHideDone","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1245d45e.chunk.js","sourcesContent":["import { useState, useRef, useEffect } from \"react\";\r\nimport \"./style.css\";\r\n\r\nconst Form = ({ addNewProduct }) => {\r\n   const [newProductContent, setNewProductContent] = useState(\"\");\r\n   const [isEditing, setEditing] = useState(true);\r\n   const inputRef = useRef();\r\n\r\n   useEffect(() => {\r\n      inputRef.current.focus()\r\n   }, []);\r\n\r\n   const focusInput = () => {\r\n      setEditing(isEditing => isEditing);\r\n      if (isEditing) {\r\n         inputRef.current.focus();\r\n      }\r\n   };\r\n\r\n   const productContent = ({ target }) => {\r\n      setNewProductContent(target.value);\r\n   };\r\n\r\n   const onFormSubmit = (event) => {\r\n      event.preventDefault();\r\n\r\n      if (newProductContent.trim() !== \"\") {\r\n         addNewProduct(newProductContent.trim());\r\n         setNewProductContent(\"\");\r\n      }\r\n   };\r\n\r\n   return (\r\n      <form className=\"form js-form\" onSubmit={onFormSubmit}>\r\n         <input\r\n            className=\"form__input\"\r\n            type=\"text\" name=\"product\"\r\n            placeholder=\"Napisz artykuł!\"\r\n            value={newProductContent}\r\n            onChange={productContent}\r\n            ref={inputRef}\r\n         />\r\n         <button\r\n            className=\"form__button\"\r\n            onClick={focusInput}\r\n         >\r\n            Dodaj do listy\r\n         </button>\r\n      </form>\r\n   );\r\n}\r\n\r\nexport default Form;","import \"./style.css\";\r\n\r\nconst Products = ({ products, hideDone, removeProduct, toggleDoneProduct }) => (\r\n   <ul className=\"products\">\r\n      {products.map((product) => (\r\n         <li key={product.id}\r\n            className={`products__item${product.done && hideDone\r\n               ? \" products__item--hidden\"\r\n               : \"\"}`}>\r\n            <button\r\n               className={`products__itemButton${product.done\r\n                  ? \" products__itemButton--done\"\r\n                  : \"\"}`}\r\n               onClick={() => toggleDoneProduct(product.id)}\r\n            >\r\n            </button>\r\n            <span\r\n               className={`\"products__itemContent${product.done\r\n                  ? \" products__itemContent--done\"\r\n                  : \"\"}`}>\r\n               {product.content}\r\n            </span>\r\n            <button\r\n               className=\"products__itemButton products__itemButton--delete\"\r\n               onClick={() => removeProduct(product.id)}\r\n            >\r\n            </button>\r\n         </li>\r\n      ))}\r\n   </ul>\r\n)\r\n\r\nexport default Products;","import \"./style.css\";\r\n\r\nconst Buttons = ({ products, hideDone, toggleHideDone, setAllDone }) => (\r\n\r\n   <div className=\"buttons\">\r\n      {products.length > 0 && (\r\n         <>\r\n            <button\r\n               className=\"buttons__button\"\r\n               onClick={toggleHideDone}>\r\n               {products.some(({ done }) => done) && hideDone\r\n                  ? \"Pokaż\" : \"Ukryj\"} zaznaczone\r\n            </button>\r\n            <button\r\n               className=\"buttons__button\"\r\n               disabled={products.every(({ done }) => done)}\r\n               onClick={setAllDone}\r\n            >\r\n               Zaznacz wszystkie\r\n            </button>\r\n         </>\r\n      )}\r\n   </div >\r\n);\r\n\r\n\r\nexport default Buttons;\r\n","import \"./style.css\";\r\n\r\nconst Section = ({ title, body, extraHeaderContent }) => (\r\n    <section className=\"section\">\r\n        <div className=\"section__header\">\r\n            <h2 className=\"section__title\">{title}</h2>\r\n            {extraHeaderContent}\r\n        </div>\r\n        <div className=\"section__body\">\r\n            {body}\r\n        </div>\r\n    </section>\r\n);\r\n\r\nexport default Section;","import \"./style.css\"\r\n\r\nconst Header = ({title}) =>(\r\n    <h1 className=\"header__title\">{title}</h1>\r\n);\r\n\r\nexport default Header;","import \"./style.css\";\r\n\r\nconst Container = ({children}) =>(\r\n    <main className=\"page\">\r\n        {children}\r\n    </main>\r\n);\r\n\r\nexport default Container;","import { useState, useEffect } from \"react\";\nimport Form from \"./Section/Form\";\nimport Products from \"./Section/Products\";\nimport Buttons from \"./Section/Buttons\";\nimport Section from \"./Section\";\nimport Header from \"./Header\";\nimport Container from \"./Container\";\n\n\nfunction App() {\n  const getProductsFromLocaleStorage = () =>\n    JSON.parse(localStorage.getItem(\"products\"))\n\n  const [products, setProducts] = useState(getProductsFromLocaleStorage);\n\n  useEffect(() => {\n    localStorage.setItem(\"products\", JSON.stringify(products))\n  }, [products]);\n\n  const [hideDone, setHideDone] = useState(false);\n\n  const addNewProduct = (newProductContent) => {\n    setProducts(products => [\n      ...products,\n      {\n        content: newProductContent,\n        done: false,\n        id: products.length ? products[products.length - 1].id + 1 : 1,\n      },\n    ]);\n  };\n\n  const removeProduct = (id) => {\n    setProducts(products =>\n      products.filter(product => product.id !== id));\n  };\n\n  const toggleHideDone = () => {\n    setHideDone(hideDone => !hideDone);\n  };\n\n  const toggleDoneProduct = (id) => {\n    setProducts(products => products.map(product => {\n      if (product.id === id) {\n        return { ...product, done: !product.done };\n      }\n\n      return product;\n    }));\n  };\n\n  const setAllDone = () => {\n    setProducts(products => products.map(product => ({\n      ...product,\n      done: true,\n    })));\n  };\n\n  return (\n    <div className=\"App\">\n      <Container>\n        <Header\n          title=\"Lista zakupów\"\n        />\n\n        <Section\n          title=\"Dodaj nowy artykuł\"\n          body={\n            <Form\n              addNewProduct={addNewProduct}\n            />\n          }\n        />\n\n        <Section\n          title=\"Lista zakupów\"\n          body={\n            <Products\n              products={products}\n              hideDone={hideDone}\n              removeProduct={removeProduct}\n              toggleDoneProduct={toggleDoneProduct}\n            />\n          }\n          extraHeaderContent={\n            <Buttons\n              products={products}\n              hideDone={hideDone}\n              toggleHideDone={toggleHideDone}\n              removeProduct={removeProduct}\n              setAllDone={setAllDone}\n            />\n          }\n        />\n      </Container>\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}